import { Search, User, Settings, LogOut, Play } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuSeparator,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { Avatar, AvatarFallback } from "@/components/ui/avatar";

interface HeaderProps {
  user?: {
    username: string;
    role: string;
  } | null;
  onSearch?: (query: string) => void;
  onLogin?: () => void;
  onLogout?: () => void;
  onAdminPanel?: () => void;
}

export default function Header({ user, onSearch, onLogin, onLogout, onAdminPanel }: HeaderProps) {
  return (
    <header className="glass-effect sticky top-0 z-50 border-b border-white/20">
      <div className="container mx-auto px-4 py-3">
        <div className="flex items-center justify-between gap-4">
          {/* Logo */}
          <div className="flex items-center gap-2">
            <div className="h-8 w-8 rounded-md bg-primary flex items-center justify-center">
              <Play className="h-5 w-5 text-primary-foreground" />
            </div>
            <h1 className="text-xl font-bold text-white">AnimeSite</h1>
          </div>

          {/* Search */}
          <div className="flex-1 max-w-md">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-white/60 h-4 w-4" />
              <Input
                placeholder="Анимэ іздеу..."
                className="pl-10 bg-white/10 border-white/20 text-white placeholder:text-white/60"
                onChange={(e) => onSearch?.(e.target.value)}
                data-testid="input-search"
              />
            </div>
          </div>

          {/* User Actions */}
          <div className="flex items-center gap-2">
            {user ? (
              <DropdownMenu>
                <DropdownMenuTrigger asChild>
                  <Button variant="ghost" className="flex items-center gap-2 text-white hover:bg-white/10" data-testid="button-user-menu">
                    <Avatar className="h-8 w-8">
                      <AvatarFallback className="bg-primary text-primary-foreground">
                        {user.username.charAt(0).toUpperCase()}
                      </AvatarFallback>
                    </Avatar>
                    <span className="hidden md:inline">{user.username}</span>
                    {user.role === 'admin' && (
                      <Badge variant="outline" className="text-xs border-primary text-primary">
                        Admin
                      </Badge>
                    )}
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="end" className="glass-effect border-white/20">
                  <DropdownMenuItem className="text-white">
                    <User className="mr-2 h-4 w-4" />
                    Профиль
                  </DropdownMenuItem>
                  {user.role === 'admin' && (
                    <DropdownMenuItem className="text-white" onClick={onAdminPanel} data-testid="button-admin-panel">
                      <Settings className="mr-2 h-4 w-4" />
                      Басқару панелі
                    </DropdownMenuItem>
                  )}
                  <DropdownMenuSeparator className="bg-white/20" />
                  <DropdownMenuItem className="text-white" onClick={onLogout} data-testid="button-logout">
                    <LogOut className="mr-2 h-4 w-4" />
                    Шығу
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>
            ) : (
              <Button onClick={onLogin} className="bg-primary hover:bg-primary/90" data-testid="button-login">
                Кіру
              </Button>
            )}
          </div>
        </div>
      </div>
    </header>
  );
}